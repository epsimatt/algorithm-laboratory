"""
욕심쟁이 알고리즘 (greedy algorithm)은 매 순간마다 가장 나아 보이는 것을 선택하는 문제 해결 방법이다. 욕심쟁이
알고리즘에서는 가장 나아 보이는 것을 선택한 이후에 절대 그 결정을 바꾸지 않으며, 그 선택을 가지고 바로 문제를 해결한다.
욕심쟁이 알고리즘은 상당히 효율적인 문제 해결 방법으로 알려져 있지만, 문제를 해결할 수 있는 최적의 선택을
찾는 것이 어렵다는 문제가 있다. 또한 욕심쟁이 알고리즘은 적용할 수 있는 문제가 그렇게 많지 않다는 문제를 가진다.

욕심쟁이 알고리즘을 적용할 수 있는 대표적인 문제는 동전 문제 (coin problem)이다. 동전 문제는 다양한 종류의 동전을 개수
제한 없이 사용하여 선택한 동전의 합이 `n`이 되도록 하기 위해 필요한 최소한의 동전 개수를 구하는 문제이다. 주어진 동전이
`{1, 2, 5, 10, 20, 50, 100, 200}`이고, `n = 520`일 때, 이 문제를 욕심쟁이 알고리즘을 이용해서 해결하려면 `200`짜리
동전 2개를 먼저 선택하고, `100`짜리 동전 1개와 `20`짜리 동전 1개를 선택하면 된다. 하지만 욕심쟁이 알고리즘으로 항상
최적의 문제 해결 방법을 얻을 수 있는 것은 아니다. 주어진 동전이 `{1, 3, 4}`이고 `n = 6`일 경우, 욕심쟁이 알고리즘을
사용하면 해답이 `4 + 1 + 1`이 나오지만 실제 해답은 `3 + 3`이 나오는 것을 확인할 수 있다.
"""
if __name__ == '__main__':
    pass
